<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
    <TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
    <IsPackable>false</IsPackable>
    <SpaRoot>ClientApp\</SpaRoot>
    <DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.1" />
  </ItemGroup>

  <ItemGroup>
    <!-- Don't publish the SPA source files, but do show them in the project files list -->
    <Compile Remove="ClientApp\**" />
    <Content Remove="$(SpaRoot)**" />
    <Content Remove="ClientApp\**" />
    <EmbeddedResource Remove="ClientApp\**" />
    <None Remove="$(SpaRoot)**" />
    <None Remove="ClientApp\**" />
    <None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
  </ItemGroup>

  <ItemGroup>
    <None Remove="ClientApp\.eslintrc.json" />
    <None Remove="ClientApp\.gitignore" />
    <None Remove="ClientApp\package-lock.json" />
    <None Remove="ClientApp\package.json" />
    <None Remove="ClientApp\public\favicon.ico" />
    <None Remove="ClientApp\public\index.html" />
    <None Remove="ClientApp\public\manifest.json" />
    <None Remove="ClientApp\README.md" />
    <None Remove="ClientApp\src\GUI\AppRouter.tsx" />
    <None Remove="ClientApp\src\GUI\LoginPage\LoginForm\LoginForm.tsx" />
    <None Remove="ClientApp\src\GUI\LoginPage\LoginForm\props.ts" />
    <None Remove="ClientApp\src\GUI\LoginPage\LoginForm\styles.ts" />
    <None Remove="ClientApp\src\GUI\LoginPage\LoginPage.tsx" />
    <None Remove="ClientApp\src\GUI\LoginPage\LoginPageContainer.ts" />
    <None Remove="ClientApp\src\GUI\LoginPage\props.ts" />
    <None Remove="ClientApp\src\GUI\LoginPage\styles.ts" />
    <None Remove="ClientApp\src\GUI\NotFountPage\NotFoundPage.tsx" />
    <None Remove="ClientApp\src\GUI\RegistrationPage\props.ts" />
    <None Remove="ClientApp\src\GUI\RegistrationPage\RegistrarionPage.tsx" />
    <None Remove="ClientApp\src\GUI\RegistrationPage\RegistrationForm\props.ts" />
    <None Remove="ClientApp\src\GUI\RegistrationPage\RegistrationForm\RegistrationForm.tsx" />
    <None Remove="ClientApp\src\GUI\RegistrationPage\RegistrationForm\styles.ts" />
    <None Remove="ClientApp\src\GUI\RegistrationPage\RegistrationPageContainer.ts" />
    <None Remove="ClientApp\src\GUI\RegistrationPage\styles.ts" />
    <None Remove="ClientApp\src\GUI\shared\AppSnackbar\AppSnackbar.tsx" />
    <None Remove="ClientApp\src\GUI\shared\AppSnackbar\AppSnackbarContainer.ts" />
    <None Remove="ClientApp\src\GUI\shared\AppSnackbar\props.ts" />
    <None Remove="ClientApp\src\GUI\shared\Form\Fields\CustomErrorMessage.tsx" />
    <None Remove="ClientApp\src\GUI\shared\Form\Fields\CustomTextField.tsx" />
    <None Remove="ClientApp\src\GUI\shared\Form\FormNames.ts" />
    <None Remove="ClientApp\src\HttpInterceptor.ts" />
    <None Remove="ClientApp\src\index.tsx" />
    <None Remove="ClientApp\src\logic\actions\actions.ts" />
    <None Remove="ClientApp\src\logic\actionTypes\actionTypes.ts" />
    <None Remove="ClientApp\src\logic\reducers\reducer.ts" />
    <None Remove="ClientApp\src\logic\reducers\rootReducer.ts" />
    <None Remove="ClientApp\src\logic\sagas\apis\apis.ts" />
    <None Remove="ClientApp\src\logic\sagas\sagasRunner.ts" />
    <None Remove="ClientApp\src\logic\sagas\sagas\sagas.ts" />
    <None Remove="ClientApp\src\logic\sagas\selectors\selectors.ts" />
    <None Remove="ClientApp\src\logic\sagas\watchers\watchers.ts" />
    <None Remove="ClientApp\src\react-app-env.d.ts" />
    <None Remove="ClientApp\tsconfig.json" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\Diplom.Domain\Diplom.Domain.csproj" />
    <ProjectReference Include="..\Diplom.Infrastructure\Diplom.Infrastructure.csproj" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
    <!-- Ensure Node.js is installed -->
    <Exec Command="node --version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>

  <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
    <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

    <!-- Include the newly-built files in the publish output -->
    <ItemGroup>
      <DistFiles Include="$(SpaRoot)build\**; $(SpaRoot)build-ssr\**" />
      <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
        <RelativePath>%(DistFiles.Identity)</RelativePath>
        <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
        <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
      </ResolvedFileToPublish>
    </ItemGroup>
  </Target>

</Project>
